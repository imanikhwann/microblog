2025-01-31 22:27:31,762 INFO: Microblog startup [in C:\Users\owner\Documents\Projects\microblog\app\__init__.py:76]
2025-01-31 22:27:39,615 ERROR: Exception on /messages [GET] [in C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\flask\app.py:875]
Traceback (most recent call last):
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\flask_login\utils.py", line 290, in decorated_view
    return current_app.ensure_sync(func)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\owner\Documents\Projects\microblog\app\main\routes.py", line 164, in messages
    query = current_user.message_received.select().order_by(Message.timestamp.desc())
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'User' object has no attribute 'message_received'. Did you mean: 'messages_received'?
2025-01-31 22:28:50,407 INFO: Microblog startup [in C:\Users\owner\Documents\Projects\microblog\app\__init__.py:76]
2025-01-31 22:46:37,307 INFO: Microblog startup [in C:\Users\owner\Documents\Projects\microblog\app\__init__.py:76]
2025-01-31 22:46:48,795 INFO: Microblog startup [in C:\Users\owner\Documents\Projects\microblog\app\__init__.py:76]
2025-01-31 23:04:45,441 INFO: Microblog startup [in C:\Users\owner\Documents\Projects\microblog\app\__init__.py:76]
2025-01-31 23:04:54,484 ERROR: Exception on /index [GET] [in C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\flask\app.py:875]
Traceback (most recent call last):
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4594, in _bind_param
    return BindParameter(
        self.key,
    ...<5 lines>...
        expanding=expanding,
    )
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2031, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        _compared_to_operator, check_value
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1042, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3808, in _resolve_value_to_type
    raise exc.ArgumentError(
        "Object %r is not legal as a SQL literal value" % (value,)
    )
sqlalchemy.exc.ArgumentError: Object <User iman> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\flask_login\utils.py", line 290, in decorated_view
    return current_app.ensure_sync(func)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\owner\Documents\Projects\microblog\app\main\routes.py", line 43, in index
    return render_template('index.html', title=_('Home'), form=form, posts=posts.items, next_url=next_url, prev_url=prev_url)
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\flask\templating.py", line 150, in render_template
    return _render(app, template, context)
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\flask\templating.py", line 131, in _render
    rv = template.render(context)
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\jinja2\environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\jinja2\environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "C:\Users\owner\Documents\Projects\microblog\app\templates\index.html", line 2, in top-level template code
    {% import "bootstrap_wtf.html" as wtf %}
    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\owner\Documents\Projects\microblog\app\templates\base.html", line 49, in top-level template code
    {% set unread_message_count = current_user.unread_message_count() %}
    
  File "C:\Users\owner\Documents\Projects\microblog\app\models.py", line 141, in unread_message_count
    query = sa.select(Message).where(Message.recipient_id == self, Message.timestamp > last_read_time)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 582, in __eq__
    return self.operate(eq, other)
           ~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 582, in __eq__
    return self.operate(eq, other)
           ~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 479, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 582, in __eq__
    return self.operate(eq, other)
           ~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1513, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 582, in __eq__
    return self.operate(eq, other)
           ~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
        roles.BinaryElementRole, element=obj, operator=op, expr=expr
    )
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
        element, argname=argname, **kw
    )
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        element, argname=argname, resolved=resolved, advice=advice, **kw
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <User iman>.
2025-01-31 23:08:14,908 INFO: Microblog startup [in C:\Users\owner\Documents\Projects\microblog\app\__init__.py:76]
2025-01-31 23:08:20,379 INFO: Microblog startup [in C:\Users\owner\Documents\Projects\microblog\app\__init__.py:76]
2025-01-31 23:08:45,978 INFO: Microblog startup [in C:\Users\owner\Documents\Projects\microblog\app\__init__.py:76]
