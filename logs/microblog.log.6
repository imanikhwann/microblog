2025-01-31 22:25:45,988 ERROR: Exception on /index [GET] [in C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\flask\app.py:875]
Traceback (most recent call last):
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\orm\mapper.py", line 2520, in get_property
    return self._props[key]
           ~~~~~~~~~~~^^^^^
KeyError: 'message_sent'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\flask\app.py", line 915, in full_dispatch_request
    rv = self.preprocess_request()
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\flask\app.py", line 1291, in preprocess_request
    rv = self.ensure_sync(before_func)()
  File "C:\Users\owner\Documents\Projects\microblog\app\main\routes.py", line 15, in before_request
    if current_user.is_authenticated:
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\werkzeug\local.py", line 318, in __get__
    obj = instance._get_current_object()
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\werkzeug\local.py", line 526, in _get_current_object
    return get_name(local())
                    ~~~~~^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\flask_login\utils.py", line 25, in <lambda>
    current_user = LocalProxy(lambda: _get_user())
                                      ~~~~~~~~~^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\flask_login\utils.py", line 370, in _get_user
    current_app.login_manager._load_user()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\flask_login\login_manager.py", line 364, in _load_user
    user = self._user_callback(user_id)
  File "C:\Users\owner\Documents\Projects\microblog\app\models.py", line 145, in load_user
    return db.session.get(User, int(id))
           ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 1060, in get
    return self._proxied.get(
           ~~~~~~~~~~~~~~~~~^
        entity,
        ^^^^^^^
    ...<6 lines>...
        bind_arguments=bind_arguments,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 3693, in get
    return self._get_impl(
           ~~~~~~~~~~~~~~^
        entity,
        ^^^^^^^
    ...<7 lines>...
        bind_arguments=bind_arguments,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 3873, in _get_impl
    return db_load_fn(
        self,
    ...<5 lines>...
        bind_arguments=bind_arguments,
    )
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\orm\loading.py", line 694, in load_on_pk_identity
    session.execute(
    ~~~~~~~~~~~~~~~^
        q,
        ^^
    ...<2 lines>...
        bind_arguments=bind_arguments,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2362, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2247, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self,
        ^^^^^
    ...<4 lines>...
        conn,
        ^^^^^
    )
    ^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\orm\context.py", line 305, in orm_execute_statement
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1418, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1632, in _execute_clauseelement
    compiled_sql, extracted_params, cache_hit = elem._compile_w_cache(
                                                ~~~~~~~~~~~~~~~~~~~~~^
        dialect=dialect,
        ^^^^^^^^^^^^^^^^
    ...<4 lines>...
        linting=self.dialect.compiler_linting | compiler.WARN_LINTING,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 703, in _compile_w_cache
    compiled_sql = self._compiler(
        dialect,
    ...<4 lines>...
        **kw,
    )
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 316, in _compiler
    return dialect.statement_compiler(dialect, self, **kw)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\sql\compiler.py", line 1429, in __init__
    Compiled.__init__(self, dialect, statement, **kwargs)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\sql\compiler.py", line 870, in __init__
    self.string = self.process(self.statement, **compile_kwargs)
                  ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\sql\compiler.py", line 915, in process
    return obj._compiler_dispatch(self, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\sql\visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\sql\compiler.py", line 4679, in visit_select
    compile_state = select_stmt._compile_state_factory(
        select_stmt, self, **kwargs
    )
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\sql\base.py", line 683, in create_for_statement
    return klass.create_for_statement(statement, compiler, **kw)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\orm\context.py", line 1110, in create_for_statement
    _QueryEntity.to_compile_state(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self,
        ^^^^^
    ...<2 lines>...
        is_current_entities=True,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\orm\context.py", line 2565, in to_compile_state
    _MapperEntity(
    ~~~~~~~~~~~~~^
        compile_state,
        ^^^^^^^^^^^^^^
    ...<2 lines>...
        is_current_entities,
        ^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\orm\context.py", line 2645, in __init__
    entity._post_inspect
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 1253, in __get__
    obj.__dict__[self.__name__] = result = self.fget(obj)
                                           ~~~~~~~~~^^^^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\orm\mapper.py", line 2722, in _post_inspect
    self._check_configure()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\orm\mapper.py", line 2399, in _check_configure
    _configure_registries({self.registry}, cascade=True)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\orm\mapper.py", line 4215, in _configure_registries
    _do_configure_registries(registries, cascade)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\orm\mapper.py", line 4256, in _do_configure_registries
    mapper._post_configure_properties()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\orm\mapper.py", line 2416, in _post_configure_properties
    prop.init()
    ~~~~~~~~~^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\orm\interfaces.py", line 589, in init
    self.do_init()
    ~~~~~~~~~~~~^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\orm\relationships.py", line 1647, in do_init
    self._generate_backref()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\orm\relationships.py", line 2133, in _generate_backref
    self._add_reverse_property(self.back_populates)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\orm\relationships.py", line 1578, in _add_reverse_property
    other = self.mapper.get_property(key, _configure_mappers=False)
  File "C:\Users\owner\Documents\Projects\microblog\venv\Lib\site-packages\sqlalchemy\orm\mapper.py", line 2522, in get_property
    raise sa_exc.InvalidRequestError(
    ...<3 lines>...
    ) from err
sqlalchemy.exc.InvalidRequestError: Mapper 'Mapper[User(user)]' has no property 'message_sent'.  If this property was indicated from other mappers or configure events, ensure registry.configure() has been called.
